{"ast":null,"code":"var _jsxFileName = \"/Users/shahmaansari/Downloads/app-ui/src/App.tsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([\n    // {\n    //     id: 1,\n    //     title: \"Note title 1\",\n    //     content: \"Content 1\"\n    // },\n    // {\n    //     id: 2,\n    //     title: \"Note title 2\",\n    //     content: \"Content 2\"\n    // },\n    // {\n    //     id: 3,\n    //     title: \"Note title 3\",\n    //     content: \"Content 3\"\n    // },\n    // {\n    //     id: 4,\n    //     title: \"Note title 4\",\n    //     content: \"Content 4\"\n    // },\n  ]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleUpdateNote = event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    const updatedNote = {\n      id: selectedNote.id,\n      title: title,\n      content: content\n    };\n    const updatedNotesList = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n    setNotes(updatedNotesList);\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const handleAddNote = event => {\n    event.preventDefault();\n    const newNote = {\n      id: notes.length + 1,\n      title: title,\n      content: content\n    };\n    setNotes([newNote, ...notes]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: event => selectedNote ? handleUpdateNote(event) : handleAddNote(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => {\n          setTitle(event.target.value);\n        },\n        placeholder: \"title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => {\n          setContent(event.target.value);\n        },\n        placeholder: \"content\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Fmxc9n2ZMnxZSWLwLi7fNKDH3W8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","title","setTitle","content","setContent","selectedNote","setSelectedNote","handleNoteClick","note","handleUpdateNote","event","preventDefault","updatedNote","id","updatedNotesList","map","handleAddNote","newNote","length","handleCancel","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["/Users/shahmaansari/Downloads/app-ui/src/App.tsx"],"sourcesContent":["import \"./App.css\"\nimport React, {useState} from \"react\";\n\ntype Note = {\n    id: number;\n    title: string;\n    content: string;\n}\n\nconst App = () => {\n\n    const [notes, setNotes] = useState <Note[]>([\n        // {\n        //     id: 1,\n        //     title: \"Note title 1\",\n        //     content: \"Content 1\"\n        // },\n        // {\n        //     id: 2,\n        //     title: \"Note title 2\",\n        //     content: \"Content 2\"\n        // },\n        // {\n        //     id: 3,\n        //     title: \"Note title 3\",\n        //     content: \"Content 3\"\n        // },\n        // {\n        //     id: 4,\n        //     title: \"Note title 4\",\n        //     content: \"Content 4\"\n        // },\n    ])\n\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\")\n    const [selectedNote, setSelectedNote] = useState<Note | null >(null)\n\n    const handleNoteClick = (note: Note) => {\n        setSelectedNote(note);\n        setTitle(note.title);\n        setContent(note.content);\n    }\n\n    const handleUpdateNote = (\n        event:React.FormEvent\n    )=> {\n        event.preventDefault();\n\n        if (!selectedNote){\n            return;\n        }\n        const updatedNote: Note = {\n            id: selectedNote.id,\n            title: title,\n            content: content,\n        }\n\n        const updatedNotesList = notes.map((note) =>\n            note.id === selectedNote.id\n                ? updatedNote\n                : note\n        )\n\n        setNotes(updatedNotesList)\n        setTitle(\"\")\n        setContent(\"\")\n        setSelectedNote(null)\n    }\n\n    const handleAddNote = (\n        event: React.FormEvent\n    ) => {\n        event.preventDefault();\n\n        const newNote: Note = {\n            id: notes.length + 1,\n            title: title,\n            content: content,\n        };\n\n        setNotes([newNote, ...notes]);\n        setTitle(\"\");\n        setContent(\"\");\n    };\n\n    const handleCancel = () => {\n        setTitle(\"\")\n        setContent(\"\")\n        setSelectedNote(null)\n    }\n\n    return (\n\n        <div className=\"app-container\">\n            <form\n                className=\"note-form\"\n                onSubmit={(event)=>\n                    selectedNote\n                        ? handleUpdateNote(event)\n                        : handleAddNote(event)\n                }>\n                <input\n                    value={title}\n                    onChange={(event) => {\n                        setTitle(event.target.value)\n                    }}\n                    placeholder=\"title\"\n                    required>\n                </input>\n                <textarea\n                    value={content}\n                    onChange={(event) => {\n                        setContent(event.target.value);\n                    }}\n                    placeholder=\"content\"\n                    rows={10}\n                    required\n                ></textarea>\n\n                {selectedNote ? (\n                    <div className=\"edit-buttons\">\n                        <button type=\"submit\">Save</button>\n                        <button\n                            onClick={handleCancel}\n                        >Cancel</button>\n                    </div>\n                ) : (\n                    <button type=\"submit\">Add Note</button>\n                )}\n            </form>\n\n            <div className=\"notes-grid\">\n                {notes.map((note) => (\n                    <div\n                        className=\"note-item\"\n                        onClick={() => handleNoteClick(note)}\n                    >\n                        <div className=\"note-header\">\n                            <button>x</button>\n                        </div>\n                        <h2>{note.title}</h2>\n                        <p>{note.content}</p>\n                    </div>\n                ))}\n\n            </div>\n        </div>\n    )\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAU;IACxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH,CAAC;EAEF,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAe,IAAI,CAAC;EAEpE,MAAMa,eAAe,GAAIC,IAAU,IAAK;IACpCF,eAAe,CAACE,IAAI,CAAC;IACrBN,QAAQ,CAACM,IAAI,CAACP,KAAK,CAAC;IACpBG,UAAU,CAACI,IAAI,CAACL,OAAO,CAAC;EAC5B,CAAC;EAED,MAAMM,gBAAgB,GAClBC,KAAqB,IACrB;IACAA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACN,YAAY,EAAC;MACd;IACJ;IACA,MAAMO,WAAiB,GAAG;MACtBC,EAAE,EAAER,YAAY,CAACQ,EAAE;MACnBZ,KAAK,EAAEA,KAAK;MACZE,OAAO,EAAEA;IACb,CAAC;IAED,MAAMW,gBAAgB,GAAGf,KAAK,CAACgB,GAAG,CAAEP,IAAI,IACpCA,IAAI,CAACK,EAAE,KAAKR,YAAY,CAACQ,EAAE,GACrBD,WAAW,GACXJ,IACV,CAAC;IAEDR,QAAQ,CAACc,gBAAgB,CAAC;IAC1BZ,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdE,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMU,aAAa,GACfN,KAAsB,IACrB;IACDA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMM,OAAa,GAAG;MAClBJ,EAAE,EAAEd,KAAK,CAACmB,MAAM,GAAG,CAAC;MACpBjB,KAAK,EAAEA,KAAK;MACZE,OAAO,EAAEA;IACb,CAAC;IAEDH,QAAQ,CAAC,CAACiB,OAAO,EAAE,GAAGlB,KAAK,CAAC,CAAC;IAC7BG,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACvBjB,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdE,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBAEIV,OAAA;IAAKwB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BzB,OAAA;MACIwB,SAAS,EAAC,WAAW;MACrBE,QAAQ,EAAGZ,KAAK,IACZL,YAAY,GACNI,gBAAgB,CAACC,KAAK,CAAC,GACvBM,aAAa,CAACN,KAAK,CAC5B;MAAAW,QAAA,gBACDzB,OAAA;QACI2B,KAAK,EAAEtB,KAAM;QACbuB,QAAQ,EAAGd,KAAK,IAAK;UACjBR,QAAQ,CAACQ,KAAK,CAACe,MAAM,CAACF,KAAK,CAAC;QAChC,CAAE;QACFG,WAAW,EAAC,OAAO;QACnBC,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACRnC,OAAA;QACI2B,KAAK,EAAEpB,OAAQ;QACfqB,QAAQ,EAAGd,KAAK,IAAK;UACjBN,UAAU,CAACM,KAAK,CAACe,MAAM,CAACF,KAAK,CAAC;QAClC,CAAE;QACFG,WAAW,EAAC,SAAS;QACrBM,IAAI,EAAE,EAAG;QACTL,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EAEX1B,YAAY,gBACTT,OAAA;QAAKwB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBzB,OAAA;UAAQqC,IAAI,EAAC,QAAQ;UAAAZ,QAAA,EAAC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCnC,OAAA;UACIsC,OAAO,EAAEf,YAAa;UAAAE,QAAA,EACzB;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,gBAENnC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACzC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEPnC,OAAA;MAAKwB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBtB,KAAK,CAACgB,GAAG,CAAEP,IAAI,iBACZZ,OAAA;QACIwB,SAAS,EAAC,WAAW;QACrBc,OAAO,EAAEA,CAAA,KAAM3B,eAAe,CAACC,IAAI,CAAE;QAAAa,QAAA,gBAErCzB,OAAA;UAAKwB,SAAS,EAAC,aAAa;UAAAC,QAAA,eACxBzB,OAAA;YAAAyB,QAAA,EAAQ;UAAC;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACNnC,OAAA;UAAAyB,QAAA,EAAKb,IAAI,CAACP;QAAK;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBnC,OAAA;UAAAyB,QAAA,EAAIb,IAAI,CAACL;QAAO;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAjC,EAAA,CA5IKD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA8IT,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}